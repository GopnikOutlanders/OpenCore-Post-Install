(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{332:function(e,o,t){e.exports=t.p+"assets/img/usb-mount.bec53b4c.png"},333:function(e,o,t){e.exports=t.p+"assets/img/hdd-mount.3dbb6ca3.png"},334:function(e,o,t){e.exports=t.p+"assets/img/hdd-clean.5072f7a2.png"},449:function(e,o,t){"use strict";t.r(o);var n=t(10),a=Object(n.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"moving-opencore-from-usb-to-macos-drive"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#moving-opencore-from-usb-to-macos-drive"}},[e._v("#")]),e._v(" Moving OpenCore from USB to macOS Drive")]),e._v(" "),o("h2",{attrs:{id:"grabbing-opencore-off-the-usb"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#grabbing-opencore-off-the-usb"}},[e._v("#")]),e._v(" Grabbing OpenCore off the USB")]),e._v(" "),o("p",[e._v("So to start, we'll first want to grab OpenCore off of our installer. To do this, we'll be using a neat tool from CorpNewt called "),o("a",{attrs:{href:"https://github.com/corpnewt/MountEFI",target:"_blank",rel:"noopener noreferrer"}},[e._v("MountEFI"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("For this example, we'll assume your USB is called "),o("code",[e._v("Install macOS Catalina")]),e._v(":")]),e._v(" "),o("p",[o("img",{attrs:{src:t(332),alt:""}})]),e._v(" "),o("p",[e._v("Once the EFI's mounted, we'll want to grab our EFI folder on there and keep in a safe place. We'll then want to "),o("strong",[e._v("eject the USB drive's EFI")]),e._v(" as having multiple EFI's mounted can confuse macOS sometimes, best practice is to keep only 1 EFI mounted at a time(you can eject just the EFI, the drive itself doesn't need to be removed)")]),e._v(" "),o("p",[o("strong",[e._v("Note")]),e._v(": Installers made with gibMacOS's MakeInstall.bat on Windows will default to a Master Boot Record(MBR) partition map, this means there is no dedicated EFI partition instead being the "),o("code",[e._v("BOOT")]),e._v(" partition that mounts by default in macOS.")]),e._v(" "),o("p",[o("img",{attrs:{src:t(333),alt:""}})]),e._v(" "),o("p",[e._v("Now with this done, lets mount our macOS drive. With macOS Catalina, macOS is actually partitioned into 2 volumes: System Partition and User Partition. This means that MountEFI may report multiple drives in it's picker but each partition will still share the same EFI(The UEFI spec only allows for 1 EFI per drive). You can tell if it's the same drive with disk"),o("strong",[e._v("X")]),e._v("sY (Y is just to say what partition it is)")]),e._v(" "),o("p",[o("img",{attrs:{src:t(334),alt:""}})]),e._v(" "),o("p",[e._v("When you mount your main drive's EFI, you may be greeted with a folder called "),o("code",[e._v("APPLE")]),e._v(", this is used for updating the firmware on real Macs but has no effect on our hardware. You can wipe everything on the EFI partition and replace it with the one found on your USB")]),e._v(" "),o("h2",{attrs:{id:"special-note-for-insydeh2o-bios-users"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#special-note-for-insydeh2o-bios-users"}},[e._v("#")]),e._v(" Special note for InsydeH2O BIOS users")]),e._v(" "),o("p",[e._v("If your BIOS is a Insyde or InsydeH2O BIOS, you may notice that if you are trying to dual boot you'll only see Windows Boot Manager as a viable option after copying your OpenCore to your internal drive.  This is due to the way Insyde blocks booting from "),o("code",[e._v("EFI/BOOT/BOOTX64.EFI")]),e._v(".  When this happens, there is a way around this by adding a direct entry to OpenCore to the BIOS' Boot Menu.  You can follow these steps to restore OpenCore to your Boot Menu while keeping Windows.  It is best to have this opened on another screen such as a phone or another computer as this will break booting into Windows temporarily.")]),e._v(" "),o("ul",[o("li",[e._v("Access your EFI via administrative console (Admin Terminal) while in Windows, or use Explorer++")]),e._v(" "),o("li",[e._v("Rename the "),o("code",[e._v("bootmgfw.efi")]),e._v(" file under "),o("code",[e._v("EFI/Microsoft")]),e._v(" to something you can remember, but it cannot have .efi at the end)")]),e._v(" "),o("li",[e._v("Replace "),o("code",[e._v("BOOTX64.EFI")]),e._v(" inside "),o("code",[e._v("EFI/BOOT")]),e._v(" with the one from your OpenCore install")]),e._v(" "),o("li",[e._v("Reboot machine")]),e._v(" "),o("li",[e._v("You should see OpenCore again, boot back into macOS")]),e._v(" "),o("li",[e._v("Go into your config.plist, and enable "),o("code",[e._v("LauncherOption")]),e._v(" "),o("ul",[o("li",[e._v("For newer InsydeH2O revisions, you can attempt to use "),o("code",[e._v("Full")]),e._v(", but if it fails switch to "),o("code",[e._v("Short")]),e._v(" as most older Insyde BIOSes have a hard time reading full device paths.")])])]),e._v(" "),o("li",[e._v("Reboot once more to choose "),o("code",[e._v("OpenCore")]),e._v(", but instead of booting into macOS, choose the reboot option at the OpenCore Boot Picker\n"),o("ul",[o("li",[e._v("To do this, press "),o("code",[e._v("Tab")]),e._v(" until the Reboot option is highlighted (Pressing Tab halts the timeout for auto-boot)")])])]),e._v(" "),o("li",[e._v("Press the key to access your UEFI Boot Menu, and you should see a new entry called OpenCore")]),e._v(" "),o("li",[e._v("OpenCore should boot normally at this point.")]),e._v(" "),o("li",[e._v("Mount your EFI using your favorite tool in macOS like normal, and rename the "),o("code",[e._v("bootmgfw.efi")]),e._v(" file you renamed earlier back to its original file name.")]),e._v(" "),o("li",[e._v("Reboot but go into your UEFI BIOS Utility\n"),o("ul",[o("li",[e._v("Windows Boot Manager will be at top of the list now.")]),e._v(" "),o("li",[e._v("OpenCore should be below it, use the key associated to moving entries up or down, and move OpenCore so it is above Windows Boot Manager.")])])]),e._v(" "),o("li",[e._v("Reboot and OpenCore should boot normally with Windows as an option.")])]),e._v(" "),o("p",[e._v("Once this is done, as long as OpenCore continues to boot from this point on, OpenCore will remain at the top of the list.  But do realize any BIOS updates, NVRAM resets, etc will wipe the entry from the list, and Windows Boot Manager will take over.  If this happens just follow the steps above again.")]),e._v(" "),o("h2",{attrs:{id:"special-notes-for-legacy-users"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#special-notes-for-legacy-users"}},[e._v("#")]),e._v(" Special notes for legacy users")]),e._v(" "),o("p",[e._v("When transferring over your EFI, there are still boot sectors that need to be written to so your non-UEFI BIOS would be able to find it. So don't forget to rerun the "),o("a",{attrs:{href:"https://dortania.github.io/OpenCore-Install-Guide/installer-guide/mac-install.html#legacy-setup",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("BootInstallARCH.tool")]),o("OutboundLink")],1),e._v(" on your macOS drive.")])])}),[],!1,null,null,null);o.default=a.exports}}]);